@echo off
REM Script pour tester la configuration Docker de production en local
REM Avant de d√©ployer sur Render

echo ======================================
echo üê≥ Test Configuration Docker Production
echo ======================================
echo.

REM V√©rifier si Docker est install√©
docker --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Docker n'est pas install√©
    pause
    exit /b 1
)
echo ‚úÖ Docker est install√©

REM V√©rifier si Docker est en cours d'ex√©cution
docker info >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Docker Desktop n'est pas en cours d'ex√©cution
    echo Lancez Docker Desktop et r√©essayez
    pause
    exit /b 1
)
echo ‚úÖ Docker est en cours d'ex√©cution
echo.

echo üì¶ Construction des images Docker de production...
echo.

REM Build du backend
echo Construction du backend...
cd backend
docker build -f Dockerfile.production -t cybeform-backend-prod .
if %errorlevel% neq 0 (
    echo ‚ùå √âchec de la construction du backend
    pause
    exit /b 1
)
echo ‚úÖ Backend construit avec succ√®s
cd ..
echo.

REM Build du frontend
echo Construction du frontend...
cd frontend\btp-meeting-ui
docker build -f Dockerfile.production -t cybeform-frontend-prod .
if %errorlevel% neq 0 (
    echo ‚ùå √âchec de la construction du frontend
    pause
    exit /b 1
)
echo ‚úÖ Frontend construit avec succ√®s
cd ..\..
echo.

echo üöÄ Lancement des conteneurs de test...
echo.

REM Arr√™ter les conteneurs existants si pr√©sents
docker stop cybeform-backend-test >nul 2>&1
docker stop cybeform-frontend-test >nul 2>&1
docker rm cybeform-backend-test >nul 2>&1
docker rm cybeform-frontend-test >nul 2>&1

REM Lancer le backend
echo Lancement du backend sur le port 8000...
if exist "backend\.env" (
    docker run -d --name cybeform-backend-test -p 8000:8000 --env-file backend\.env -e DATA_PATH=/tmp/data cybeform-backend-prod
) else (
    echo ‚ùå Fichier backend\.env non trouv√©
    echo Cr√©ez le fichier backend\.env avec vos variables d'environnement
    pause
    exit /b 1
)

REM Attendre que le backend soit pr√™t
echo Attente du d√©marrage du backend...
timeout /t 5 /nobreak >nul

REM V√©rifier si le backend r√©pond
curl -f http://localhost:8000/health >nul 2>&1
if %errorlevel% equ 0 (
    echo ‚úÖ Backend accessible sur http://localhost:8000
) else (
    echo ‚ö†Ô∏è  Le backend ne r√©pond pas encore
    echo V√©rifiez les logs avec: docker logs cybeform-backend-test
)

REM Lancer le frontend
echo Lancement du frontend sur le port 3000...
docker run -d --name cybeform-frontend-test -p 3000:80 cybeform-frontend-prod
echo ‚úÖ Frontend accessible sur http://localhost:3000
echo.

echo ======================================
echo üìù R√©sum√© du Test
echo ======================================
echo.
echo ‚úÖ Images Docker de production construites
echo ‚úÖ Backend : http://localhost:8000
echo ‚úÖ API Docs : http://localhost:8000/docs
echo ‚úÖ Frontend : http://localhost:3000
echo.
echo Pour voir les logs :
echo   Backend  : docker logs cybeform-backend-test
echo   Frontend : docker logs cybeform-frontend-test
echo.
echo Pour arr√™ter les conteneurs :
echo   docker stop cybeform-backend-test cybeform-frontend-test
echo   docker rm cybeform-backend-test cybeform-frontend-test
echo.
echo ‚úÖ Si tout fonctionne, vous √™tes pr√™t pour le d√©ploiement sur Render !
echo.
pause
