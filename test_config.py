#!/usr/bin/env python
"""
Script pour tester les configurations avant d√©ploiement
"""
import os
import sys
from dotenv import load_dotenv

# Charger les variables d'environnement
load_dotenv()

print("=" * 60)
print("üîç TEST DE CONFIGURATION POUR D√âPLOIEMENT")
print("=" * 60)

# Test des variables essentielles
configs = {
    "OpenAI API Key": os.getenv("OPENAI_API_KEY"),
    "Cloudinary Cloud Name": os.getenv("CLOUDINARY_CLOUD_NAME"),
    "Cloudinary API Key": os.getenv("CLOUDINARY_API_KEY"),
    "Cloudinary API Secret": os.getenv("CLOUDINARY_API_SECRET"),
    "Database URL": os.getenv("DATABASE_URL"),
    "JWT Secret Key": os.getenv("JWT_SECRET_KEY"),
}

all_good = True

for name, value in configs.items():
    if value:
        # Masquer les valeurs sensibles
        if "secret" in name.lower() or "key" in name.lower():
            display_value = value[:5] + "..." + value[-3:] if len(value) > 8 else "***"
        else:
            display_value = value[:20] + "..." if len(value) > 20 else value
        print(f"‚úÖ {name}: {display_value}")
    else:
        print(f"‚ùå {name}: NON CONFIGUR√â")
        all_good = False

print("\n" + "=" * 60)

if all_good:
    print("‚úÖ TOUTES LES CONFIGURATIONS SONT PR√âSENTES")
    print("\nProc√©dez au d√©ploiement en suivant le guide !")
else:
    print("‚ö†Ô∏è  CONFIGURATIONS MANQUANTES")
    print("\nAssurez-vous de configurer toutes les variables")
    print("dans votre fichier .env ou sur Render")

print("=" * 60)

# Test des imports essentiels
print("\nüì¶ Test des d√©pendances Python...")
try:
    import fastapi
    print("‚úÖ FastAPI install√©")
except ImportError:
    print("‚ùå FastAPI non install√©")

try:
    import sqlalchemy
    print("‚úÖ SQLAlchemy install√©")
except ImportError:
    print("‚ùå SQLAlchemy non install√©")

try:
    import cloudinary
    print("‚úÖ Cloudinary install√©")
except ImportError:
    print("‚ùå Cloudinary non install√©")

try:
    import openai
    print("‚úÖ OpenAI install√©")
except ImportError:
    print("‚ùå OpenAI non install√©")

print("\n" + "=" * 60)
print("Test termin√© !")
print("=" * 60)
